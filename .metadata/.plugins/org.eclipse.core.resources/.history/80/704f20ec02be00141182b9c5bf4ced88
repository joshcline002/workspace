import java.util.ArrayList;
import java.util.Stack;


public class QuickSort<E extends Comparable<? super E>> implements SortAnalysis<E> {

	@Override
	public long analyzeSort(ArrayList<E> list) {
		Stack<Integer> stack = new Stack<Integer>();
		stack.push(0);
		stack.push(list.size());
		
		return 0;
	}
	
	private int partition(ArrayList<E> list, int p, int left, int right ){
		int l = left;
		int r = right;
		E pivot = list.get((l+r)/2);
		E tmp;
		
		while(right >= left){
			while (list.get(left).compareTo(pivot)<0){
				left++;
			}
			
			while(list.get(left).compareTo(pivot)>0){
				right--;
			}
			
			if(left <= right){
				tmp = list.get(left);
				list.set(left, list.get(right));
				list.set(right, tmp);
				left++;
				right--;
			}
			
		}
		return left;
	}

}
